@page "/admin/purchases"

@inherits OwningComponentBase<IPurchaseRepository>

<PurchasesTable TableTitle="Uncollected Donations" ListPurchase="UncollectedPurchases" ButtonLabel="Collected" PurchaseSelected="ShipPurchase">
</PurchasesTable>

<PurchasesTable TableTitle="Collected Donations" ListPurchase="CollectedPurchases" ButtonLabel="Reset" PurchaseSelected="ResetPurchase">
</PurchasesTable>

<button class="btn btn-info" @onclick="@(x => UpdateData())">Refresh Data</button>
@code{
    public IPurchaseRepository repo => Service;

    public IEnumerable<Purchase> AllPurchases { get; set; }
    public IEnumerable<Purchase> UncollectedPurchases { get; set; }
    public IEnumerable<Purchase> CollectedPurchases { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        AllPurchases = await repo.Purchases.ToListAsync();
        UncollectedPurchases = AllPurchases.Where(x => !x.PurchaseShipped);
        CollectedPurchases = AllPurchases.Where(x => x.PurchaseShipped);

    }
    public void ShipPurchase(int id) => UpdatePurchase(id, true);
    public void ResetPurchase(int id) => UpdatePurchase(id, false);

    private void UpdatePurchase(int id, bool shipped)
    {
        Purchase p = repo.Purchases.FirstOrDefault(x => x.PurchaseId == id);
        p.PurchaseShipped = shipped;
        repo.SavePurchase(p);
    }
}
